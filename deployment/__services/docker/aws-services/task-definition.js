"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTaskDefinition = void 0;
const aws_ecs_1 = require("aws-cdk-lib/aws-ecs");
const log_driver_1 = require("../../logging/aws-services/log-driver");
const identity_access_management_1 = require("../../resource-permissions/aws-resources/identity-access-management");
const createTaskDefinition = (scope, props) => {
    const logDriver = (0, log_driver_1.createLogDriver)(scope, {
        cdkIdentifier: 'DockerContainerLogGroup',
        logGroupName: 'docker-container-logs',
        prefix: 'container',
    });
    const taskDefinition = new aws_ecs_1.Ec2TaskDefinition(scope, 'TaskDef', {
        networkMode: aws_ecs_1.NetworkMode.AWS_VPC,
        taskRole: (0, identity_access_management_1.createRole)(scope, 'DockerAccessSecrets', {
            forServices: ['ecs-tasks.amazonaws.com'],
            permissionsGranted: [
                'AmazonSSMManagedInstanceCore',
                'SecretsManagerReadWrite',
            ],
        }),
    });
    const container = taskDefinition.addContainer('ApiDockerContainer', {
        image: props.image,
        cpu: 512,
        memoryReservationMiB: 256,
        portMappings: [{ containerPort: 80 }],
        logging: logDriver,
        secrets: props.secrets,
        environment: props.environment,
    });
    return taskDefinition;
};
exports.createTaskDefinition = createTaskDefinition;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1kZWZpbml0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidGFzay1kZWZpbml0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLGlEQU00QjtBQUs1QixzRUFBdUU7QUFDdkUsb0hBQWdHO0FBOEJ6RixNQUFNLG9CQUFvQixHQUFHLENBQUMsS0FBZ0IsRUFBRSxLQUFZLEVBQUUsRUFBRTtJQUNyRSxNQUFNLFNBQVMsR0FBRyxJQUFBLDRCQUFlLEVBQUMsS0FBSyxFQUFFO1FBQ3ZDLGFBQWEsRUFBRSx5QkFBeUI7UUFDeEMsWUFBWSxFQUFFLHVCQUF1QjtRQUNyQyxNQUFNLEVBQUUsV0FBVztLQUNwQixDQUFDLENBQUE7SUFFRixNQUFNLGNBQWMsR0FBRyxJQUFJLDJCQUFpQixDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUU7UUFDN0QsV0FBVyxFQUFFLHFCQUFXLENBQUMsT0FBTztRQUNoQyxRQUFRLEVBQUUsSUFBQSx1Q0FBVSxFQUFDLEtBQUssRUFBRSxxQkFBcUIsRUFBRTtZQUNqRCxXQUFXLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztZQUN4QyxrQkFBa0IsRUFBRTtnQkFDbEIsOEJBQThCO2dCQUM5Qix5QkFBeUI7YUFDMUI7U0FDRixDQUFDO0tBQ0gsQ0FBQyxDQUFBO0lBRUYsTUFBTSxTQUFTLEdBQUcsY0FBYyxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsRUFBRTtRQUNsRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7UUFDbEIsR0FBRyxFQUFFLEdBQUc7UUFDUixvQkFBb0IsRUFBRSxHQUFHO1FBQ3pCLFlBQVksRUFBRSxDQUFDLEVBQUUsYUFBYSxFQUFFLEVBQUUsRUFBRSxDQUFDO1FBQ3JDLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTztRQUN0QixXQUFXLEVBQUUsS0FBSyxDQUFDLFdBQVc7S0FDL0IsQ0FBQyxDQUFBO0lBRUYsT0FBTyxjQUFjLENBQUE7QUFDdkIsQ0FBQyxDQUFBO0FBN0JZLFFBQUEsb0JBQW9CLHdCQTZCaEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZW1vdmFsUG9saWN5IH0gZnJvbSAnYXdzLWNkay1saWInXG5pbXBvcnQgeyBQcm90b2NvbCB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1lYzInXG5pbXBvcnQgeyBSZXBvc2l0b3J5IH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWVjcidcbmltcG9ydCB7XG4gIEF3c0xvZ0RyaXZlcixcbiAgQ29udGFpbmVySW1hZ2UsXG4gIEVjMlRhc2tEZWZpbml0aW9uLFxuICBFY3JJbWFnZSxcbiAgTmV0d29ya01vZGUsXG59IGZyb20gJ2F3cy1jZGstbGliL2F3cy1lY3MnXG5pbXBvcnQgeyBMb2dHcm91cCwgUmV0ZW50aW9uRGF5cyB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1sb2dzJ1xuaW1wb3J0IHsgRGF0YWJhc2VJbnN0YW5jZSB9IGZyb20gJ2F3cy1jZGstbGliL2F3cy1yZHMnXG5pbXBvcnQgeyBTZWNyZXQgfSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWNzJ1xuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cydcbmltcG9ydCB7IGNyZWF0ZUxvZ0RyaXZlciB9IGZyb20gJy4uLy4uL2xvZ2dpbmcvYXdzLXNlcnZpY2VzL2xvZy1kcml2ZXInXG5pbXBvcnQgeyBjcmVhdGVSb2xlIH0gZnJvbSAnLi4vLi4vcmVzb3VyY2UtcGVybWlzc2lvbnMvYXdzLXJlc291cmNlcy9pZGVudGl0eS1hY2Nlc3MtbWFuYWdlbWVudCdcbmltcG9ydCB7IGNyZWF0ZURvY2tlclJlcG8gfSBmcm9tICcuL2VsYXN0aWMtY29udGFpbmVyLXJlZ2lzdHJ5J1xuXG50eXBlIFByb3BzID0ge1xuICAvKipcbiAgICogVGhlIFJlY29yZCBLZXkgaXMgdGhlIG5hbWUgb2YgdGhlIEVudmlyb25tZW50IHZhcmlhYmxlIHRoYXQgd2lsbCBiZSBpbmplY3RlZCBpbnRvIHRoZSBkb2NrZXIgY29udGFpbmVyXG4gICAqIFRoZSByZWNvcmQgdmFsdWUgaXMgdGhlIEFXUyBTZWNyZXQgTWFuYWdlciB2YWx1ZVxuICAgKiBAZXhhbXBsZVxuICAgIGltcG9ydCAqIGFzIHNzbSBmcm9tICdhd3MtY2RrLWxpYi9hd3Mtc2VjcmV0c21hbmFnZXInXG4gICAgaW1wb3J0ICogYXMgZWNzIGZyb20gJ2F3cy1jZGstbGliL2F3cy1lY3MnXG4gICAgY29uc3QgZGF0YWJhc2UgPSBuZXcgRGF0YWJhc2VJbnN0YW5jZSgpXG4gICAgY29uc3Qgc3RyaXBlUHJpdmF0ZUtleSA9IG5ldyBzc20uU2VjcmV0KClcbiAgICBjb25zdCB0YXNrRGVmaW5pdGlvbiA9IGNyZWF0ZVRhc2tEZWZpbml0aW9uKHRoaXMsICcnLCB7XG4gICAgICBzZWNyZXRzOiB7XG4gICAgICAgIFwiREFUQUJBU0VfUEFTU1dPUkRcIjogZWNzLlNlY3JldC5mcm9tU2VjcmV0c01hbmFnZXIoZGF0YWJhc2Uuc2VjcmV0LCBcInBhc3N3b3JkXCIpXG4gICAgICAgIFwiREFUQUJBU0VfVVNFUk5BTUVcIjogZWNzLlNlY3JldC5mcm9tU2VjcmV0c01hbmFnZXIoZGF0YWJhc2Uuc2VjcmV0LCBcInVzZXJuYW1lXCIpXG4gICAgICAgIC8vIHRoaXMgd291bGQgZmFpbCwgYmVjYXVzZSBpdCBpc24ndCBhbiBlY3Mgc2VjcmV0XG4gICAgICAgIFwiU1RSSVBFX0tFWVwiOiBzdHJpcGVQcml2YXRlS2V5LFxuICAgICAgfVxuICAgIH0pXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gbWVhbndoaWxlLCBpbnNpZGUgb2YgeW91ciBydW5uaW5nIGNvbnRhaW5lci4uLlxuICAgIGVjaG8gJFNUUklQRV9LRVlcbiAgICBlY2hvICREQVRBQkFTRV9QQVNTV09SRFxuICAgIGVjaG8gJERBVEFCQVNFX1VTRVJOQU1FXG4gICAqL1xuICBzZWNyZXRzPzogeyBba2V5OiBzdHJpbmddOiBTZWNyZXQgfVxuICBlbnZpcm9ubWVudD86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgaW1hZ2U6IEVjckltYWdlXG59XG5leHBvcnQgY29uc3QgY3JlYXRlVGFza0RlZmluaXRpb24gPSAoc2NvcGU6IENvbnN0cnVjdCwgcHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IGxvZ0RyaXZlciA9IGNyZWF0ZUxvZ0RyaXZlcihzY29wZSwge1xuICAgIGNka0lkZW50aWZpZXI6ICdEb2NrZXJDb250YWluZXJMb2dHcm91cCcsXG4gICAgbG9nR3JvdXBOYW1lOiAnZG9ja2VyLWNvbnRhaW5lci1sb2dzJyxcbiAgICBwcmVmaXg6ICdjb250YWluZXInLFxuICB9KVxuXG4gIGNvbnN0IHRhc2tEZWZpbml0aW9uID0gbmV3IEVjMlRhc2tEZWZpbml0aW9uKHNjb3BlLCAnVGFza0RlZicsIHtcbiAgICBuZXR3b3JrTW9kZTogTmV0d29ya01vZGUuQVdTX1ZQQyxcbiAgICB0YXNrUm9sZTogY3JlYXRlUm9sZShzY29wZSwgJ0RvY2tlckFjY2Vzc1NlY3JldHMnLCB7XG4gICAgICBmb3JTZXJ2aWNlczogWydlY3MtdGFza3MuYW1hem9uYXdzLmNvbSddLFxuICAgICAgcGVybWlzc2lvbnNHcmFudGVkOiBbXG4gICAgICAgICdBbWF6b25TU01NYW5hZ2VkSW5zdGFuY2VDb3JlJyxcbiAgICAgICAgJ1NlY3JldHNNYW5hZ2VyUmVhZFdyaXRlJyxcbiAgICAgIF0sXG4gICAgfSksXG4gIH0pXG5cbiAgY29uc3QgY29udGFpbmVyID0gdGFza0RlZmluaXRpb24uYWRkQ29udGFpbmVyKCdBcGlEb2NrZXJDb250YWluZXInLCB7XG4gICAgaW1hZ2U6IHByb3BzLmltYWdlLFxuICAgIGNwdTogNTEyLFxuICAgIG1lbW9yeVJlc2VydmF0aW9uTWlCOiAyNTYsXG4gICAgcG9ydE1hcHBpbmdzOiBbeyBjb250YWluZXJQb3J0OiA4MCB9XSxcbiAgICBsb2dnaW5nOiBsb2dEcml2ZXIsXG4gICAgc2VjcmV0czogcHJvcHMuc2VjcmV0cyxcbiAgICBlbnZpcm9ubWVudDogcHJvcHMuZW52aXJvbm1lbnQsXG4gIH0pXG5cbiAgcmV0dXJuIHRhc2tEZWZpbml0aW9uXG59XG4iXX0=