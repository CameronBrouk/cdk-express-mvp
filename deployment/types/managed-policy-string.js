"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"managed-policy-string.js","sourceRoot":"","sources":["managed-policy-string.ts"],"names":[],"mappings":"","sourcesContent":["export type ManagedPolicyString =\n  | 'AWSDirectConnectReadOnlyAccess'\n  | 'AmazonGlacierReadOnlyAccess'\n  | 'AWSMarketplaceFullAccess'\n  | 'ClientVPNServiceRolePolicy'\n  | 'AWSSSODirectoryAdministrator'\n  | 'AWSIoT1ClickReadOnlyAccess'\n  | 'AutoScalingConsoleReadOnlyAccess'\n  | 'AmazonDMSRedshiftS3Role'\n  | 'AWSQuickSightListIAM'\n  | 'AWSHealthFullAccess'\n  | 'AlexaForBusinessGatewayExecution'\n  | 'AmazonElasticTranscoder_ReadOnlyAccess'\n  | 'AmazonRDSFullAccess'\n  | 'SupportUser'\n  | 'AmazonEC2FullAccess'\n  | 'SecretsManagerReadWrite'\n  | 'AWSIoTThingsRegistration'\n  | 'AmazonDocDBReadOnlyAccess'\n  | 'AmazonMQApiFullAccess'\n  | 'AWSElementalMediaStoreReadOnly'\n  | 'AWSCertificateManagerReadOnly'\n  | 'AWSQuicksightAthenaAccess'\n  | 'AWSCloudMapRegisterInstanceAccess'\n  | 'AWSMarketplaceImageBuildFullAccess'\n  | 'AWSCodeCommitPowerUser'\n  | 'AWSCodeCommitFullAccess'\n  | 'IAMSelfManageServiceSpecificCredentials'\n  | 'AmazonEMRCleanupPolicy'\n  | 'AWSCloud9EnvironmentMember'\n  | 'AWSApplicationAutoscalingSageMakerEndpointPolicy'\n  | 'FMSServiceRolePolicy'\n  | 'AmazonSQSFullAccess'\n  | 'AlexaForBusinessReadOnlyAccess'\n  | 'AWSIoTLogging'\n  | 'AmazonEC2RoleforSSM'\n  | 'AlexaForBusinessNetworkProfileServicePolicy'\n  | 'AWSCloudHSMRole'\n  | 'AWSEnhancedClassicNetworkingMangementPolicy'\n  | 'IAMFullAccess'\n  | 'AmazonInspectorFullAccess'\n  | 'AmazonElastiCacheFullAccess'\n  | 'AWSAgentlessDiscoveryService'\n  | 'AWSXrayWriteOnlyAccess'\n  | 'AWSPriceListServiceFullAccess'\n  | 'AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy'\n  | 'AutoScalingReadOnlyAccess'\n  | 'AmazonForecastFullAccess'\n  | 'TranslateFullAccess'\n  | 'AutoScalingFullAccess'\n  | 'AmazonEC2RoleforAWSCodeDeploy'\n  | 'AWSFMMemberReadOnlyAccess'\n  | 'AmazonElasticMapReduceEditorsRole'\n  | 'AmazonEKSClusterPolicy'\n  | 'AmazonEKSWorkerNodePolicy'\n  | 'AWSMobileHub_ReadOnly'\n  | 'CloudWatchEventsBuiltInTargetExecutionAccess'\n  | 'AutoScalingServiceRolePolicy'\n  | 'AmazonElasticTranscoder_FullAccess'\n  | 'AmazonCloudDirectoryReadOnlyAccess'\n  | 'CloudWatchAgentAdminPolicy'\n  | 'AWSOpsWorksCMInstanceProfileRole'\n  | 'AWSBatchServiceEventTargetRole'\n  | 'AWSCodePipelineApproverAccess'\n  | 'AWSApplicationDiscoveryAgentAccess'\n  | 'ViewOnlyAccess'\n  | 'AmazonElasticMapReduceRole'\n  | 'ElasticLoadBalancingFullAccess'\n  | 'AmazonRoute53DomainsReadOnlyAccess'\n  | 'AmazonSSMAutomationApproverAccess'\n  | 'AWSSecurityHubReadOnlyAccess'\n  | 'AWSConfigRoleForOrganizations'\n  | 'ApplicationAutoScalingForAmazonAppStreamAccess'\n  | 'AmazonEC2ContainerRegistryFullAccess'\n  | 'AmazonFSxFullAccess'\n  | 'SimpleWorkflowFullAccess'\n  | 'GreengrassOTAUpdateArtifactAccess'\n  | 'AmazonS3FullAccess'\n  | 'AWSStorageGatewayReadOnlyAccess'\n  | 'Billing'\n  | 'QuickSightAccessForS3StorageManagementAnalyticsReadOnly'\n  | 'AmazonEC2ContainerRegistryReadOnly'\n  | 'AmazonElasticMapReduceforEC2Role'\n  | 'DatabaseAdministrator'\n  | 'AmazonRedshiftReadOnlyAccess'\n  | 'AmazonEC2ReadOnlyAccess'\n  | 'CloudWatchAgentServerPolicy'\n  | 'AWSXrayReadOnlyAccess'\n  | 'AWSElasticBeanstalkEnhancedHealth'\n  | 'WellArchitectedConsoleFullAccess'\n  | 'AmazonElasticMapReduceReadOnlyAccess'\n  | 'AWSDirectoryServiceReadOnlyAccess'\n  | 'AWSSSOMasterAccountAdministrator'\n  | 'AmazonGuardDutyServiceRolePolicy'\n  | 'AmazonVPCReadOnlyAccess'\n  | 'AWSElasticBeanstalkServiceRolePolicy'\n  | 'ServerMigrationServiceLaunchRole'\n  | 'AWSCodeDeployRoleForECS'\n  | 'CloudWatchEventsReadOnlyAccess'\n  | 'AWSLambdaReplicator'\n  | 'AmazonAPIGatewayInvokeFullAccess'\n  | 'AWSSSOServiceRolePolicy'\n  | 'AWSLicenseManagerMasterAccountRolePolicy'\n  | 'AmazonKinesisAnalyticsReadOnly'\n  | 'AmazonMobileAnalyticsFullAccess'\n  | 'AWSMobileHub_FullAccess'\n  | 'AmazonAPIGatewayPushToCloudWatchLogs'\n  | 'CloudWatchFullAccess'\n  | 'AmazonMQApiReadOnlyAccess'\n  | 'AWSDeepLensLambdaFunctionAccessPolicy'\n  | 'AmazonGuardDutyFullAccess'\n  | 'AmazonRDSDirectoryServiceAccess'\n  | 'AWSCodePipelineReadOnlyAccess'\n  | 'ReadOnlyAccess'\n  | 'AWSAppSyncInvokeFullAccess'\n  | 'AmazonMachineLearningBatchPredictionsAccess'\n  | 'AWSIoTSiteWiseFullAccess'\n  | 'AlexaForBusinessFullAccess'\n  | 'AWSEC2SpotFleetServiceRolePolicy'\n  | 'AmazonRekognitionReadOnlyAccess'\n  | 'AWSCodeDeployReadOnlyAccess'\n  | 'CloudSearchFullAccess'\n  | 'AWSLicenseManagerServiceRolePolicy'\n  | 'AWSCloudHSMFullAccess'\n  | 'AmazonEC2SpotFleetAutoscaleRole'\n  | 'AWSElasticLoadBalancingServiceRolePolicy'\n  | 'AWSCodeBuildDeveloperAccess'\n  | 'ElastiCacheServiceRolePolicy'\n  | 'AWSGlueServiceNotebookRole'\n  | 'AWSDataPipeline_PowerUser'\n  | 'AWSCodeStarServiceRole'\n  | 'AmazonTranscribeFullAccess'\n  | 'AWSDirectoryServiceFullAccess'\n  | 'AmazonFreeRTOSOTAUpdate'\n  | 'AmazonDynamoDBFullAccess'\n  | 'AmazonSESReadOnlyAccess'\n  | 'AmazonRedshiftQueryEditor'\n  | 'AWSWAFReadOnlyAccess'\n  | 'AutoScalingNotificationAccessRole'\n  | 'AmazonMechanicalTurkReadOnly'\n  | 'AmazonKinesisReadOnlyAccess'\n  | 'AWSXRayDaemonWriteAccess'\n  | 'AWSCloudMapReadOnlyAccess'\n  | 'AWSCloudFrontLogger'\n  | 'AWSCodeDeployFullAccess'\n  | 'AWSBackupServiceRolePolicyForBackup'\n  | 'AWSRoboMakerServiceRolePolicy'\n  | 'CloudWatchActionsEC2Access'\n  | 'AWSLambdaDynamoDBExecutionRole'\n  | 'AmazonRoute53DomainsFullAccess'\n  | 'AmazonElastiCacheReadOnlyAccess'\n  | 'AmazonRDSServiceRolePolicy'\n  | 'AmazonAthenaFullAccess'\n  | 'AmazonElasticFileSystemReadOnlyAccess'\n  | 'AWSCloudMapDiscoverInstanceAccess'\n  | 'CloudFrontFullAccess'\n  | 'AWSCloud9Administrator'\n  | 'AWSApplicationAutoscalingEMRInstanceGroupPolicy'\n  | 'AmazonTextractFullAccess'\n  | 'AWSOrganizationsServiceTrustPolicy'\n  | 'AmazonDocDBFullAccess'\n  | 'AmazonMobileAnalyticsNon-financialReportAccess'\n  | 'AmazonCognitoDeveloperAuthenticatedIdentities'\n  | 'AWSConfigRole'\n  | 'AWSSSOMemberAccountAdministrator'\n  | 'AWSApplicationAutoscalingAppStreamFleetPolicy'\n  | 'AWSCertificateManagerPrivateCAFullAccess'\n  | 'AWSGlueServiceRole'\n  | 'AmazonAppStreamServiceAccess'\n  | 'AmazonRedshiftFullAccess'\n  | 'AWSTransferLoggingAccess'\n  | 'AmazonZocaloReadOnlyAccess'\n  | 'AWSCloudHSMReadOnlyAccess'\n  | 'ComprehendFullAccess'\n  | 'AmazonFSxConsoleFullAccess'\n  | 'SystemAdministrator'\n  | 'AmazonEC2ContainerServiceEventsRole'\n  | 'AmazonRoute53ReadOnlyAccess'\n  | 'AWSMigrationHubDiscoveryAccess'\n  | 'AmazonEC2ContainerServiceAutoscaleRole'\n  | 'AWSAppSyncSchemaAuthor'\n  | 'AlexaForBusinessDeviceSetup'\n  | 'AWSBatchServiceRole'\n  | 'AWSElasticBeanstalkWebTier'\n  | 'AmazonSQSReadOnlyAccess'\n  | 'AmazonChimeFullAccess'\n  | 'AWSDeepRacerRoboMakerAccessPolicy'\n  | 'AWSElasticLoadBalancingClassicServiceRolePolicy'\n  | 'AWSMigrationHubDMSAccess'\n  | 'WellArchitectedConsoleReadOnlyAccess'\n  | 'AmazonKinesisFullAccess'\n  | 'AmazonGuardDutyReadOnlyAccess'\n  | 'AmazonFSxServiceRolePolicy'\n  | 'AmazonECSServiceRolePolicy'\n  | 'AmazonConnectReadOnlyAccess'\n  | 'AmazonMachineLearningReadOnlyAccess'\n  | 'AmazonRekognitionFullAccess'\n  | 'RDSCloudHsmAuthorizationRole'\n  | 'AmazonMachineLearningFullAccess'\n  | 'AdministratorAccess'\n  | 'AmazonMachineLearningRealTimePredictionOnlyAccess'\n  | 'AWSAppSyncPushToCloudWatchLogs'\n  | 'AWSMigrationHubSMSAccess'\n  | 'AWSConfigUserAccess'\n  | 'AWSIoTConfigAccess'\n  | 'SecurityAudit'\n  | 'AWSDiscoveryContinuousExportFirehosePolicy'\n  | 'AmazonCognitoIdpEmailServiceRolePolicy'\n  | 'AWSElementalMediaConvertFullAccess'\n  | 'AWSRoboMakerReadOnlyAccess'\n  | 'AWSResourceGroupsReadOnlyAccess'\n  | 'AWSCodeStarFullAccess'\n  | 'AmazonSSMServiceRolePolicy'\n  | 'AWSDataPipeline_FullAccess'\n  | 'NeptuneFullAccess'\n  | 'AmazonSSMManagedInstanceCore'\n  | 'AWSAutoScalingPlansEC2AutoScalingPolicy'\n  | 'AmazonDynamoDBReadOnlyAccess'\n  | 'AutoScalingConsoleFullAccess'\n  | 'AWSElementalMediaPackageFullAccess'\n  | 'AmazonKinesisVideoStreamsFullAccess'\n  | 'AmazonSNSReadOnlyAccess'\n  | 'AmazonRDSPreviewServiceRolePolicy'\n  | 'AWSEC2SpotServiceRolePolicy'\n  | 'AmazonElasticMapReduceFullAccess'\n  | 'AWSCloudMapFullAccess'\n  | 'AWSDataLifecycleManagerServiceRole'\n  | 'AmazonS3ReadOnlyAccess'\n  | 'AmazonWorkSpacesAdmin'\n  | 'AWSCodeDeployRole'\n  | 'AmazonSESFullAccess'\n  | 'CloudWatchLogsReadOnlyAccess'\n  | 'AmazonRDSBetaServiceRolePolicy'\n  | 'AmazonKinesisFirehoseReadOnlyAccess'\n  | 'GlobalAcceleratorFullAccess'\n  | 'AmazonDynamoDBFullAccesswithDataPipeline'\n  | 'AWSIoTAnalyticsReadOnlyAccess'\n  | 'AmazonEC2RoleforDataPipelineRole'\n  | 'CloudWatchLogsFullAccess'\n  | 'AWSSecurityHubFullAccess'\n  | 'AWSElementalMediaPackageReadOnly'\n  | 'AWSElasticBeanstalkMulticontainerDocker'\n  | 'AmazonPersonalizeFullAccess'\n  | 'AWSMigrationHubFullAccess'\n  | 'AmazonFSxReadOnlyAccess'\n  | 'IAMUserChangePassword'\n  | 'LightsailExportAccess'\n  | 'AmazonAPIGatewayAdministrator'\n  | 'AmazonVPCCrossAccountNetworkInterfaceOperations'\n  | 'AmazonPollyReadOnlyAccess'\n  | 'AmazonRDSDataFullAccess'\n  | 'AmazonMobileAnalyticsWriteOnlyAccess'\n  | 'AmazonEC2SpotFleetTaggingRole'\n  | 'DataScientist'\n  | 'AWSMarketplaceMeteringFullAccess'\n  | 'AWSOpsWorksCMServiceRole'\n  | 'FSxDeleteServiceLinkedRoleAccess'\n  | 'WorkLinkServiceRolePolicy'\n  | 'AmazonConnectServiceLinkedRolePolicy'\n  | 'AWSPrivateMarketplaceAdminFullAccess'\n  | 'AWSConnector'\n  | 'AWSCodeDeployRoleForECSLimited'\n  | 'AmazonElasticTranscoder_JobsSubmitter'\n  | 'AmazonMacieHandshakeRole'\n  | 'AWSIoTAnalyticsFullAccess'\n  | 'AWSBatchFullAccess'\n  | 'AmazonSSMDirectoryServiceAccess'\n  | 'AmazonECS_FullAccess'\n  | 'AWSSupportServiceRolePolicy'\n  | 'AWSApplicationAutoscalingRDSClusterPolicy'\n  | 'AWSServiceRoleForEC2ScheduledInstances'\n  | 'AWSCodeDeployRoleForLambda'\n  | 'AWSFMAdminReadOnlyAccess'\n  | 'AmazonSSMFullAccess'\n  | 'AWSCodeCommitReadOnly'\n  | 'AmazonFreeRTOSFullAccess'\n  | 'AmazonTextractServiceRole'\n  | 'AmazonCognitoReadOnly'\n  | 'AmazonDMSCloudWatchLogsRole'\n  | 'AWSApplicationDiscoveryServiceFullAccess'\n  | 'AmazonRoute53AutoNamingReadOnlyAccess'\n  | 'AWSSSOReadOnly'\n  | 'AmazonVPCFullAccess'\n  | 'AWSCertificateManagerPrivateCAUser'\n  | 'AWSAppSyncAdministrator'\n  | 'AWSEC2FleetServiceRolePolicy'\n  | 'AmazonRoute53AutoNamingFullAccess'\n  | 'AWSImportExportFullAccess'\n  | 'DynamoDBReplicationServiceRolePolicy'\n  | 'AmazonMechanicalTurkFullAccess'\n  | 'AmazonEC2ContainerRegistryPowerUser'\n  | 'AWSSSODirectoryReadOnly'\n  | 'AmazonMachineLearningCreateOnlyAccess'\n  | 'AmazonKinesisVideoStreamsReadOnlyAccess'\n  | 'WAFRegionalLoggingServiceRolePolicy'\n  | 'AWSLambdaExecute'\n  | 'AWSGlueConsoleSageMakerNotebookFullAccess'\n  | 'AmazonMSKFullAccess'\n  | 'AWSIoTRuleActions'\n  | 'AmazonEKSServicePolicy'\n  | 'AWSQuickSightDescribeRedshift'\n  | 'AmazonElasticsearchServiceRolePolicy'\n  | 'AmazonMQReadOnlyAccess'\n  | 'VMImportExportRoleForAWSConnector'\n  | 'AWSCodePipelineCustomActionAccess'\n  | 'AWSLambdaSQSQueueExecutionRole'\n  | 'AWSCloud9ServiceRolePolicy'\n  | 'AWSApplicationAutoscalingECSServicePolicy'\n  | 'AWSOpsWorksInstanceRegistration'\n  | 'AmazonCloudDirectoryFullAccess'\n  | 'AmazonECSTaskExecutionRolePolicy'\n  | 'AWSStorageGatewayFullAccess'\n  | 'AWSIoTEventsFullAccess'\n  | 'AmazonLexReadOnly'\n  | 'AmazonChimeUserManagement'\n  | 'AmazonMSKReadOnlyAccess'\n  | 'AWSDataSyncFullAccess'\n  | 'AWSServiceRoleForIoTSiteWise'\n  | 'CloudwatchApplicationInsightsServiceLinkedRolePolicy'\n  | 'AWSTrustedAdvisorServiceRolePolicy'\n  | 'AWSIoTConfigReadOnlyAccess'\n  | 'AmazonWorkMailReadOnlyAccess'\n  | 'AmazonDMSVPCManagementRole'\n  | 'AWSLambdaKinesisExecutionRole'\n  | 'ComprehendDataAccessRolePolicy'\n  | 'AmazonDocDBConsoleFullAccess'\n  | 'ResourceGroupsandTagEditorReadOnlyAccess'\n  | 'AmazonRekognitionServiceRole'\n  | 'AmazonSSMAutomationRole'\n  | 'CloudHSMServiceRolePolicy'\n  | 'ComprehendReadOnly'\n  | 'AWSStepFunctionsConsoleFullAccess'\n  | 'AWSQuickSightIoTAnalyticsAccess'\n  | 'AWSCodeBuildReadOnlyAccess'\n  | 'LexBotPolicy'\n  | 'AmazonMacieFullAccess'\n  | 'AmazonMachineLearningManageRealTimeEndpointOnlyAccess'\n  | 'CloudWatchEventsInvocationAccess'\n  | 'CloudFrontReadOnlyAccess'\n  | 'AWSDeepLensServiceRolePolicy'\n  | 'AmazonSNSRole'\n  | 'AmazonInspectorServiceRolePolicy'\n  | 'AmazonMobileAnalyticsFinancialReportAccess'\n  | 'AWSElasticBeanstalkService'\n  | 'IAMReadOnlyAccess'\n  | 'AmazonRDSReadOnlyAccess'\n  | 'AWSIoTDeviceDefenderAudit'\n  | 'AmazonCognitoPowerUser'\n  | 'AmazonRoute53AutoNamingRegistrantAccess'\n  | 'AmazonElasticFileSystemFullAccess'\n  | 'LexChannelPolicy'\n  | 'ServerMigrationConnector'\n  | 'AmazonESCognitoAccess'\n  | 'AWSFMAdminFullAccess'\n  | 'AmazonChimeReadOnly'\n  | 'AmazonZocaloFullAccess'\n  | 'AWSIoTSiteWiseReadOnlyAccess'\n  | 'AWSAccountUsageReportAccess'\n  | 'AWSIoTOTAUpdate'\n  | 'AmazonMQFullAccess'\n  | 'AWSMarketplaceGetEntitlements'\n  | 'AWSGreengrassReadOnlyAccess'\n  | 'AmazonEC2ContainerServiceforEC2Role'\n  | 'AmazonAppStreamFullAccess'\n  | 'AWSIoTDataAccess'\n  | 'AmazonTranscribeReadOnlyAccess'\n  | 'AmazonESFullAccess'\n  | 'ApplicationDiscoveryServiceContinuousExportServiceRolePolicy'\n  | 'AmazonSumerianFullAccess'\n  | 'AWSWAFFullAccess'\n  | 'ElasticLoadBalancingReadOnly'\n  | 'AWSArtifactAccountSync'\n  | 'AmazonKinesisFirehoseFullAccess'\n  | 'CloudWatchReadOnlyAccess'\n  | 'AWSLambdaBasicExecutionRole'\n  | 'ResourceGroupsandTagEditorFullAccess'\n  | 'AWSKeyManagementServicePowerUser'\n  | 'AWSApplicationAutoscalingEC2SpotFleetRequestPolicy'\n  | 'AWSImportExportReadOnlyAccess'\n  | 'CloudWatchEventsServiceRolePolicy'\n  | 'AmazonElasticTranscoderRole'\n  | 'AWSGlueConsoleFullAccess'\n  | 'AmazonEC2ContainerServiceRole'\n  | 'AWSDeviceFarmFullAccess'\n  | 'AmazonSSMReadOnlyAccess'\n  | 'AWSStepFunctionsReadOnlyAccess'\n  | 'AWSMarketplaceRead-only'\n  | 'AWSApplicationAutoscalingDynamoDBTablePolicy'\n  | 'AWSCodePipelineFullAccess'\n  | 'AWSCloud9User'\n  | 'AWSGreengrassResourceAccessRolePolicy'\n  | 'AmazonMacieServiceRolePolicy'\n  | 'NetworkAdministrator'\n  | 'AWSIoT1ClickFullAccess'\n  | 'AmazonWorkSpacesApplicationManagerAdminAccess'\n  | 'AmazonDRSVPCManagement'\n  | 'AmazonRedshiftServiceLinkedRolePolicy'\n  | 'AWSCertificateManagerPrivateCAReadOnly'\n  | 'AWSXrayFullAccess'\n  | 'AWSElasticBeanstalkWorkerTier'\n  | 'AWSDirectConnectFullAccess'\n  | 'AWSCodeBuildAdminAccess'\n  | 'AmazonKinesisAnalyticsFullAccess'\n  | 'AWSSecurityHubServiceRolePolicy'\n  | 'AWSElasticBeanstalkMaintenance'\n  | 'APIGatewayServiceRolePolicy'\n  | 'AWSAccountActivityAccess'\n  | 'AmazonGlacierFullAccess'\n  | 'AmazonFSxConsoleReadOnlyAccess'\n  | 'AmazonWorkMailFullAccess'\n  | 'DAXServiceRolePolicy'\n  | 'ComprehendMedicalFullAccess'\n  | 'AWSMarketplaceManageSubscriptions'\n  | 'AWSElasticBeanstalkCustomPlatformforEC2Role'\n  | 'AWSDataSyncReadOnlyAccess'\n  | 'AWSVPCTransitGatewayServiceRolePolicy'\n  | 'NeptuneReadOnlyAccess'\n  | 'AWSSupportAccess'\n  | 'AmazonElasticMapReduceforAutoScalingRole'\n  | 'AWSElementalMediaConvertReadOnly'\n  | 'AWSLambdaInvocation-DynamoDB'\n  | 'AWSServiceCatalogEndUserFullAccess'\n  | 'IAMUserSSHKeys'\n  | 'AWSDeepRacerServiceRolePolicy'\n  | 'AmazonSageMakerReadOnly'\n  | 'AWSIoTFullAccess'\n  | 'AWSQuickSightDescribeRDS'\n  | 'AWSResourceAccessManagerServiceRolePolicy'\n  | 'AWSConfigRulesExecutionRole'\n  | 'AWSConfigServiceRolePolicy'\n  | 'AmazonESReadOnlyAccess'\n  | 'AWSCodeDeployDeployerAccess'\n  | 'KafkaServiceRolePolicy'\n  | 'AmazonPollyFullAccess'\n  | 'AmazonSSMMaintenanceWindowRole'\n  | 'AmazonRDSEnhancedMonitoringRole'\n  | 'AmazonLexFullAccess'\n  | 'AWSLambdaVPCAccessExecutionRole'\n  | 'AmazonMacieServiceRole'\n  | 'AmazonLexRunBotsOnly'\n  | 'AWSCertificateManagerPrivateCAAuditor'\n  | 'AmazonSNSFullAccess'\n  | 'AmazonEKS_CNI_Policy'\n  | 'AWSServiceCatalogAdminFullAccess'\n  | 'AWSShieldDRTAccessPolicy'\n  | 'CloudSearchReadOnlyAccess'\n  | 'AWSGreengrassFullAccess'\n  | 'NeptuneConsoleFullAccess'\n  | 'AWSCloudFormationReadOnlyAccess'\n  | 'AmazonRoute53FullAccess'\n  | 'AWSLambdaRole'\n  | 'AWSLambdaENIManagementAccess'\n  | 'AWSOpsWorksCloudWatchLogs'\n  | 'AmazonAppStreamReadOnlyAccess'\n  | 'AWSStepFunctionsFullAccess'\n  | 'CloudTrailServiceRolePolicy'\n  | 'AmazonInspectorReadOnlyAccess'\n  | 'AWSOrganizationsReadOnlyAccess'\n  | 'TranslateReadOnly'\n  | 'AWSCertificateManagerFullAccess'\n  | 'AWSDeepRacerCloudFormationAccessPolicy'\n  | 'AWSIoTEventsReadOnlyAccess'\n  | 'AWSRoboMakerServicePolicy'\n  | 'PowerUserAccess'\n  | 'AWSApplicationAutoScalingCustomResourcePolicy'\n  | 'GlobalAcceleratorReadOnlyAccess'\n  | 'AmazonSageMakerFullAccess'\n  | 'WAFLoggingServiceRolePolicy'\n  | 'AWSBackupServiceRolePolicyForRestores'\n  | 'AWSElementalMediaStoreFullAccess'\n  | 'CloudWatchEventsFullAccess'\n  | 'AWSLicenseManagerMemberAccountRolePolicy'\n  | 'AWSOrganizationsFullAccess'\n  | 'AmazonEKSLocalOutpostServiceRolePolicy'\n  | 'AWSCodePipeline_FullAccess'\n  | 'DynamoDBKinesisReplicationServiceRolePolicy'\n  | 'AWSApplicationAutoscalingElastiCacheRGPolicy'\n  | 'AmazonAugmentedAIIntegratedAPIAccess'\n  | 'AWSElasticDisasterRecoveryReadOnlyAccess'\n  | 'AmazonFraudDetectorFullAccessPolicy'\n  | 'AmazonLaunchWizard_Fullaccess'\n  | 'AmazonChimeSDK'\n  | 'AwsGlueDataBrewFullAccessPolicy'\n  | 'AmazonElasticContainerRegistryPublicReadOnly'\n  | 'AWSBudgetsActions_RolePolicyForResourceAdministrationWithSSM'\n  | 'AWSIoTDeviceTesterForFreeRTOSFullAccess'\n  | 'AWSVendorInsightsAssessorFullAccess'\n  | 'Route53ResolverServiceRolePolicy'\n  | 'WAFV2LoggingServiceRolePolicy'\n  | 'AWSBudgetsActionsWithAWSResourceControlAccess'\n  | 'AWSManagedServicesDeploymentToolkitPolicy'\n  | 'AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy'\n  | 'AdministratorAccess-Amplify'\n  | 'AWSElasticDisasterRecoveryStagingAccountPolicy'\n  | 'AWSApplicationDiscoveryAgentlessCollectorAccess'\n  | 'AmazonRoute53RecoveryReadinessFullAccess'\n  | 'AWSNetworkManagerFullAccess'\n  | 'AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy'\n  | 'AWSMarketplaceAmiIngestion'\n  | 'AWSPrivateMarketplaceRequests'\n  | 'CloudWatchApplicationInsightsReadOnlyAccess'\n  | 'AdministratorAccess-AWSElasticBeanstalk'\n  | 'AmazonSageMakerMechanicalTurkAccess'\n  | 'AmazonTimestreamConsoleFullAccess'\n  | 'AWSWAFConsoleFullAccess'\n  | 'AWSGlueSchemaRegistryReadonlyAccess'\n  | 'AWSNetworkManagerServiceRolePolicy'\n  | 'AWSAppMeshServiceRolePolicy'\n  | 'AWSConfigRemediationServiceRolePolicy'\n  | 'ConfigConformsServiceRolePolicy'\n  | 'AmazonEventBridgeReadOnlyAccess'\n  | 'AWSCodeStarNotificationsServiceRolePolicy'\n  | 'AWSMarketplacePurchaseOrdersServiceRolePolicy'\n  | 'AWSElementalMediaTailorReadOnly'\n  | 'AmazonInspector2ServiceRolePolicy'\n  | 'AmazonKendraFullAccess'\n  | 'AmazonEMRFullAccessPolicy_v2'\n  | 'AmazonS3OutpostsFullAccess'\n  | 'AppRunnerNetworkingServiceRolePolicy'\n  | 'AmazonRedshiftQueryEditorV2FullAccess'\n  | 'AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy'\n  | 'AWSQuickSightElasticsearchPolicy'\n  | 'AmazonRoute53RecoveryControlConfigFullAccess'\n  | 'AWSApplicationAutoscalingCassandraTablePolicy'\n  | 'AWSSystemsManagerAccountDiscoveryServicePolicy'\n  | 'AWSPanoramaServiceLinkedRolePolicy'\n  | 'AmazonDevOpsGuruFullAccess'\n  | 'AWSResourceAccessManagerReadOnlyAccess'\n  | 'AmazonEventBridgeFullAccess'\n  | 'AWSThinkboxAWSPortalAdminPolicy'\n  | 'AWSElasticBeanstalkReadOnly'\n  | 'AwsGlueSessionUserRestrictedNotebookPolicy'\n  | 'EC2InstanceProfileForImageBuilderECRContainerBuilds'\n  | 'AWSCodeDeployRoleForLambdaLimited'\n  | 'AWSAuditManagerServiceRolePolicy'\n  | 'AWSBackupAuditAccess'\n  | 'CloudWatchSyntheticsReadOnlyAccess'\n  | 'AmazonNimbleStudio-StudioUser'\n  | 'AWSCloudTrail_FullAccess'\n  | 'AccessAnalyzerServiceRolePolicy'\n  | 'AmazonRoute53ResolverReadOnlyAccess'\n  | 'AmazonBraketJobsExecutionPolicy'\n  | 'AmazonEC2RolePolicyForLaunchWizard'\n  | 'AmazonAppFlowReadOnlyAccess'\n  | 'AWSApplicationMigrationAgentInstallationPolicy'\n  | 'AmazonLookoutVisionConsoleReadOnlyAccess'\n  | 'AWSQuickSightTimestreamPolicy'\n  | 'AmazonManagedBlockchainFullAccess'\n  | 'ServiceQuotasFullAccess'\n  | 'AmazonTimestreamFullAccess'\n  | 'AWSBackupServiceRolePolicyForS3Backup'\n  | 'AWSAppRunnerFullAccess'\n  | 'AmazonInspector2FullAccess'\n  | 'AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy'\n  | 'ElementalAppliancesSoftwareReadOnlyAccess'\n  | 'AWSVendorInsightsVendorFullAccess'\n  | 'AmazonLookoutVisionFullAccess'\n  | 'AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy'\n  | 'AWSCodeDeployRoleForCloudFormation'\n  | 'BatchServiceRolePolicy'\n  | 'AmazonHoneycodeServiceRolePolicy'\n  | 'AWSBugBustPlayerAccess'\n  | 'AmazonSageMakerEdgeDeviceFleetPolicy'\n  | 'AWSIoTSiteWiseMonitorServiceRolePolicy'\n  | 'AWSBillingConductorReadOnlyAccess'\n  | 'AmazonHoneycodeReadOnlyAccess'\n  | 'AWSCloudFormationFullAccess'\n  | 'GroundTruthSyntheticConsoleReadOnlyAccess'\n  | 'AWSPanoramaApplianceRolePolicy'\n  | 'AmazonLookoutMetricsFullAccess'\n  | 'AWSBillingConductorFullAccess'\n  | 'AWSApplicationMigrationAgentPolicy'\n  | 'AWSOpsWorks_FullAccess'\n  | 'AmazonRDSCustomPreviewServiceRolePolicy'\n  | 'AmazonRoute53RecoveryControlConfigReadOnlyAccess'\n  | 'AmazonChimeTranscriptionServiceLinkedRolePolicy'\n  | 'AWSNetworkFirewallServiceRolePolicy'\n  | 'ElementalAppliancesSoftwareFullAccess'\n  | 'AmazonMachineLearningRoleforRedshiftDataSourceV3'\n  | 'AmazonAugmentedAIHumanLoopFullAccess'\n  | 'AmazonLookoutEquipmentReadOnlyAccess'\n  | 'AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy'\n  | 'AmazonCloudWatchRUMFullAccess'\n  | 'AWSDataExchangeReadOnly'\n  | 'AWSMarketplaceSellerProductsFullAccess'\n  | 'AWSMarketplaceLicenseManagementServiceRolePolicy'\n  | 'AWSElasticDisasterRecoveryEc2InstancePolicy'\n  | 'AWSProtonReadOnlyAccess'\n  | 'AmazonLexV2BotPolicy'\n  | 'AmazonGuardDutyMalwareProtectionServiceRolePolicy'\n  | 'AWSMigrationHubOrchestratorInstanceRolePolicy'\n  | 'AWSIQContractServiceRolePolicy'\n  | 'AWSStorageGatewayServiceRolePolicy'\n  | 'AWSBackupOrganizationAdminAccess'\n  | 'AWSMigrationHubOrchestratorPlugin'\n  | 'AWSIoTSiteWiseMonitorPortalAccess'\n  | 'AWSIdentitySyncReadOnlyAccess'\n  | 'AWSAuditManagerAdministratorAccess'\n  | 'ElementalSupportCenterFullAccess'\n  | 'AmazonHoneycodeFullAccess'\n  | 'AmazonWorkDocsReadOnlyAccess'\n  | 'CloudWatchLambdaInsightsExecutionRolePolicy'\n  | 'AmazonConnectVoiceIDFullAccess'\n  | 'AWSLicenseManagerUserSubscriptionsServiceRolePolicy'\n  | 'AWSGlobalAcceleratorSLRPolicy'\n  | 'EC2InstanceProfileForImageBuilder'\n  | 'AWSServiceRoleForLogDeliveryPolicy'\n  | 'AmazonCodeGuruReviewerFullAccess'\n  | 'AWSVPCS2SVpnServiceRolePolicy'\n  | 'AWSImageBuilderFullAccess'\n  | 'AWSIncidentManagerResolverAccess'\n  | 'AWSCertificateManagerPrivateCAPrivilegedUser'\n  | 'AmazonCloudWatchEvidentlyReadOnlyAccess'\n  | 'AWSIdentitySyncFullAccess'\n  | 'AmazonChimeSDKMediaPipelinesServiceLinkedRolePolicy'\n  | 'AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy'\n  | 'MonitronServiceRolePolicy'\n  | 'AmazonSSMPatchAssociation'\n  | 'AWSBudgetsReadOnlyAccess'\n  | 'AWSOpsWorksRegisterCLI_OnPremises'\n  | 'Health_OrganizationsServiceRolePolicy'\n  | 'AWSMigrationHubStrategyServiceRolePolicy'\n  | 'AWSApplicationMigrationVCenterClientPolicy'\n  | 'AmazonRDSCustomServiceRolePolicy'\n  | 'AmazonElasticContainerRegistryPublicFullAccess'\n  | 'AmazonMCSReadOnlyAccess'\n  | 'AmazonOpenSearchServiceFullAccess'\n  | 'AWSRoboMaker_FullAccess'\n  | 'AWSAppMeshPreviewServiceRolePolicy'\n  | 'ServiceQuotasServiceRolePolicy'\n  | 'AWSDeviceFarmServiceRolePolicy'\n  | 'AWSLambdaMSKExecutionRole'\n  | 'ComputeOptimizerReadOnlyAccess'\n  | 'AlexaForBusinessPolyDelegatedAccessPolicy'\n  | 'AWSMarketplaceProcurementSystemAdminFullAccess'\n  | 'AWSAccountManagementReadOnlyAccess'\n  | 'AmazonEKSFargatePodExecutionRolePolicy'\n  | 'AWSIoTWirelessReadOnlyAccess'\n  | 'AmazonSageMakerPipelinesIntegrations'\n  | 'AWSApplicationMigrationAgentPolicy_v2'\n  | 'AppRunnerServiceRolePolicy'\n  | 'AWSThinkboxDeadlineResourceTrackerAdminPolicy'\n  | 'AWSIoTFleetwiseServiceRolePolicy'\n  | 'AmazonRedshiftAllCommandsFullAccess'\n  | 'IAMAccessAdvisorReadOnly'\n  | 'AmazonSageMakerFeatureStoreAccess'\n  | 'AmazonCodeGuruReviewerReadOnlyAccess'\n  | 'AWSThinkboxAWSPortalGatewayPolicy'\n  | 'AWSElasticDisasterRecoveryFailbackPolicy'\n  | 'AWSApplicationAutoscalingKafkaClusterPolicy'\n  | 'AWSSystemsManagerOpsDataSyncServiceRolePolicy'\n  | 'AmazonCodeGuruProfilerFullAccess'\n  | 'AWSProtonDeveloperAccess'\n  | 'AmazonElasticFileSystemServiceRolePolicy'\n  | 'AmazonSageMakerGroundTruthExecution'\n  | 'AWSResourceAccessManagerFullAccess'\n  | 'CertificateManagerServiceRolePolicy'\n  | 'AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction'\n  | 'AWSGrafanaWorkspacePermissionManagement'\n  | 'AmazonNimbleStudio-LaunchProfileWorker'\n  | 'AWSElasticBeanstalkRoleCWL'\n  | 'DynamoDBCloudWatchContributorInsightsServiceRolePolicy'\n  | 'AmazonDetectiveServiceLinkedRolePolicy'\n  | 'AWSElasticBeanstalkRoleRDS'\n  | 'AmazonRedshiftQueryEditorV2ReadSharing'\n  | 'AWSECRPullThroughCache_ServiceRolePolicy'\n  | 'AWSPanoramaServiceRolePolicy'\n  | 'AWSElasticDisasterRecoveryConversionServerPolicy'\n  | 'AmazonEMRReadOnlyAccessPolicy_v2'\n  | 'AmazonEventBridgeApiDestinationsServiceRolePolicy'\n  | 'AwsGlueSessionUserRestrictedNotebookServiceRole'\n  | 'AppIntegrationsServiceLinkedRolePolicy'\n  | 'AWSServiceRoleForCodeGuru-Profiler'\n  | 'AmazonChimeVoiceConnectorServiceLinkedRolePolicy'\n  | 'AmazonPrometheusQueryAccess'\n  | 'AmazonGrafanaRedshiftAccess'\n  | 'AmazonDevOpsGuruConsoleFullAccess'\n  | 'AmazonEKSLocalOutpostClusterPolicy'\n  | 'AmazonWorkDocsFullAccess'\n  | 'AmazonHoneycodeWorkbookReadOnlyAccess'\n  | 'AmazonEMRServerlessServiceRolePolicy'\n  | 'MediaPackageServiceRolePolicy'\n  | 'AmazonGrafanaAthenaAccess'\n  | 'IAMAccessAnalyzerReadOnlyAccess'\n  | 'AmazonCloudWatchRUMServiceRolePolicy'\n  | 'AmazonEventBridgeSchemasServiceRolePolicy'\n  | 'AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction'\n  | 'AmazonQLDBConsoleFullAccess'\n  | 'AWSGlueSchemaRegistryFullAccess'\n  | 'AmazonEKSConnectorServiceRolePolicy'\n  | 'AWSServiceCatalogAppRegistryServiceRolePolicy'\n  | 'AWSIoTFleetHubFederationAccess'\n  | 'AWSProtonSyncServiceRolePolicy'\n  | 'AmazonElasticFileSystemClientReadWriteAccess'\n  | 'AWSNetworkManagerCloudWANServiceRolePolicy'\n  | 'AWSElasticDisasterRecoveryServiceRolePolicy'\n  | 'AWSApplicationAutoscalingComprehendEndpointPolicy'\n  | 'AWSCloudShellFullAccess'\n  | 'AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction'\n  | 'AmazonMemoryDBReadOnlyAccess'\n  | 'AWSIoTWirelessDataAccess'\n  | 'AmazonQLDBFullAccess'\n  | 'AWSSupportPlansReadOnlyAccess'\n  | 'AmazonWorkSpacesWebReadOnly'\n  | 'AmazonAugmentedAIFullAccess'\n  | 'AWSDeepRacerAccountAdminAccess'\n  | 'AWSEC2CapacityReservationFleetRolePolicy'\n  | 'AmazonKeyspacesFullAccess'\n  | 'ROSAManageSubscription'\n  | 'AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction'\n  | 'AWSAppMeshReadOnly'\n  | 'ComputeOptimizerServiceRolePolicy'\n  | 'AWSApplicationMigrationFullAccess'\n  | 'AWSLakeFormationCrossAccountManager'\n  | 'AWSGlueDataBrewServiceRole'\n  | 'AmazonBraketFullAccess'\n  | 'AWSElasticBeanstalkManagedUpdatesServiceRolePolicy'\n  | 'AmazonLexChannelsAccess'\n  | 'AlexaForBusinessLifesizeDelegatedAccessPolicy'\n  | 'AmazonOpenSearchServiceCognitoAccess'\n  | 'AmazonTimestreamReadOnlyAccess'\n  | 'AWSPanoramaFullAccess'\n  | 'AmazonInspector2ReadOnlyAccess'\n  | 'AmazonQLDBReadOnly'\n  | 'AWSChatbotServiceLinkedRolePolicy'\n  | 'AWSDeepRacerDefaultMultiUserAccess'\n  | 'AWSLambda_ReadOnlyAccess'\n  | 'AWSCodePipeline_ReadOnlyAccess'\n  | 'AWSPrivateNetworksServiceRolePolicy'\n  | 'S3StorageLensServiceRolePolicy'\n  | 'ServerMigrationServiceConsoleFullAccess'\n  | 'AWSAppSyncServiceRolePolicy'\n  | 'AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy'\n  | 'AWSAppMeshFullAccess'\n  | 'AWSIncidentManagerServiceRolePolicy'\n  | 'AWSProtonFullAccess'\n  | 'AWSElasticDisasterRecoveryAgentPolicy'\n  | 'AWSCloud9SSMInstanceProfile'\n  | 'ElementalActivationsDownloadSoftwareAccess'\n  | 'AWSPanoramaGreengrassGroupRolePolicy'\n  | 'AmazonDetectiveFullAccess'\n  | 'AWSSSMOpsInsightsServiceRolePolicy'\n  | 'AWSTransferReadOnlyAccess'\n  | 'ServiceQuotasReadOnlyAccess'\n  | 'EC2FleetTimeShiftableServiceRolePolicy'\n  | 'AmazonEBSCSIDriverPolicy'\n  | 'MigrationHubDMSAccessServiceRolePolicy'\n  | 'AWSServiceCatalogEndUserReadOnlyAccess'\n  | 'AWSIotRoboRunnerFullAccess'\n  | 'ElementalActivationsFullAccess'\n  | 'AWSIQPermissionServiceRolePolicy'\n  | 'Route53RecoveryReadinessServiceRolePolicy'\n  | 'AmazonEKSForFargateServiceRolePolicy'\n  | 'ElementalActivationsReadOnlyAccess'\n  | 'MigrationHubSMSAccessServiceRolePolicy'\n  | 'CloudFormationStackSetsOrgAdminServiceRolePolicy'\n  | 'AWSIPAMServiceRolePolicy'\n  | 'AmazonEventBridgeSchemasFullAccess'\n  | 'AWSMarketplaceSellerFullAccess'\n  | 'AmazonRedshiftQueryEditorV2NoSharing'\n  | 'CloudWatchAutomaticDashboardsAccess'\n  | 'AWSDeepRacerFullAccess'\n  | 'AmazonWorkMailEventsServiceRolePolicy'\n  | 'AmazonHoneycodeTeamAssociationFullAccess'\n  | 'AmazonPrometheusRemoteWriteAccess'\n  | 'AmazonDevOpsGuruReadOnlyAccess'\n  | 'AmazonEventBridgeSchemasReadOnlyAccess'\n  | 'AmazonFISServiceRolePolicy'\n  | 'AWSSupportAppReadOnlyAccess'\n  | 'AWSTrustedAdvisorPriorityReadOnlyAccess'\n  | 'AWSThinkboxDeadlineSpotEventPluginWorkerPolicy'\n  | 'AWSCloudWatchAlarms_ActionSSMIncidentsServiceRolePolicy'\n  | 'AWSIoTWirelessFullPublishAccess'\n  | 'GameLiftGameServerGroupPolicy'\n  | 'AmazonMWAAServiceRolePolicy'\n  | 'AmazonWorkSpacesWebServiceRolePolicy'\n  | 'AWSQuicksightOpenSearchPolicy'\n  | 'AWSElasticDisasterRecoveryFailbackInstallationPolicy'\n  | 'AmazonConnect_FullAccess'\n  | 'AWSMigrationHubOrchestratorConsoleFullAccess'\n  | 'AWSSupportPlansFullAccess'\n  | 'AWSElementalMediaLiveFullAccess'\n  | 'AWSMarketplaceSellerProductsReadOnly'\n  | 'AmazonMCSFullAccess'\n  | 'AWSIoTSiteWiseConsoleFullAccess'\n  | 'AmazonElasticFileSystemClientFullAccess'\n  | 'AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction'\n  | 'AWSThinkboxAssetServerPolicy'\n  | 'AWSForWordPressPluginPolicy'\n  | 'KafkaConnectServiceRolePolicy'\n  | 'AWSTransferFullAccess'\n  | 'AWSServiceRoleForAmazonEKSNodegroup'\n  | 'AWSGrafanaAccountAdministrator'\n  | 'AWSBackupOperatorAccess'\n  | 'AWSMigrationHubRefactorSpacesServiceRolePolicy'\n  | 'AWSApplicationAutoscalingLambdaConcurrencyPolicy'\n  | 'AWSIoTDeviceDefenderUpdateCACertMitigationAction'\n  | 'AWSBackupServiceLinkedRolePolicyForBackupTest'\n  | 'AWSApplicationMigrationMGHAccess'\n  | 'AWSDeviceFarmTestGridServiceRolePolicy'\n  | 'AWSBackupServiceRolePolicyForS3Restore'\n  | 'AmazonLookoutEquipmentFullAccess'\n  | 'AWSPurchaseOrdersServiceRolePolicy'\n  | 'AmazonHoneycodeTeamAssociationReadOnlyAccess'\n  | 'AmazonWorkSpacesServiceAccess'\n  | 'AWSSecurityHubOrganizationsAccess'\n  | 'AmazonElasticFileSystemsUtils'\n  | 'AWSCostAndUsageReportAutomationPolicy'\n  | 'MemoryDBServiceRolePolicy'\n  | 'AWSLicenseManagerConsumptionPolicy'\n  | 'AWSTransferConsoleFullAccess'\n  | 'AmazonEKSServiceRolePolicy'\n  | 'AWSIoTWirelessLogging'\n  | 'AWSRolesAnywhereServicePolicy'\n  | 'AWSConfigMultiAccountSetupPolicy'\n  | 'AWSIoTWirelessFullAccess'\n  | 'AWSElementalMediaLiveReadOnly'\n  | 'AmazonElasticFileSystemClientReadOnlyAccess'\n  | 'AmazonElasticMapReducePlacementGroupPolicy'\n  | 'AWSElasticDisasterRecoveryConsoleFullAccess'\n  | 'AmazonCognitoIdpServiceRolePolicy'\n  | 'AWSWellArchitectedOrganizationsServiceRolePolicy'\n  | 'AmazonCloudWatchEvidentlyServiceRolePolicy'\n  | 'AmazonMQServiceRolePolicy'\n  | 'AmazonSageMakerCanvasFullAccess'\n  | 'AWSApplicationMigrationServiceRolePolicy'\n  | 'AmazonMemoryDBFullAccess'\n  | 'AmazonKeyspacesReadOnlyAccess'\n  | 'AWSElasticDisasterRecoveryAgentInstallationPolicy'\n  | 'AWSMigrationHubStrategyCollector'\n  | 'CloudFormationStackSetsOrgMemberServiceRolePolicy'\n  | 'AWSResourceAccessManagerResourceShareParticipantAccess'\n  | 'AmazonRedshiftQueryEditorV2ReadWriteSharing'\n  | 'AWSBillingReadOnlyAccess'\n  | 'AWSTrustedAdvisorPriorityFullAccess'\n  | 'ServerMigrationServiceRoleForInstanceValidation'\n  | 'AWSApplicationAutoscalingNeptuneClusterPolicy'\n  | 'AWSBackupFullAccess'\n  | 'AmazonDevOpsGuruServiceRolePolicy'\n  | 'AWSMigrationHubOrchestratorServiceRolePolicy'\n  | 'AWSElasticBeanstalkRoleWorkerTier'\n  | 'AmazonCodeGuruProfilerReadOnlyAccess'\n  | 'AmazonSSMManagedEC2InstanceDefaultPolicy'\n  | 'ElementalActivationsGenerateLicenses'\n  | 'AWSShieldServiceRolePolicy'\n  | 'AWSBugBustServiceRolePolicy'\n  | 'AWSAppRunnerServicePolicyForECRAccess'\n  | 'AWSNetworkManagerReadOnlyAccess'\n  | 'AmazonDevOpsGuruOrganizationsAccess'\n  | 'AmazonRDSPerformanceInsightsReadOnly'\n  | 'AmazonEMRServicePolicy_v2'\n  | 'AWSApplicationMigrationReadOnlyAccess'\n  | 'AWSServiceCatalogAppRegistryReadOnlyAccess'\n  | 'AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy'\n  | 'IVSRecordToS3'\n  | 'AmazonRoute53RecoveryReadinessReadOnlyAccess'\n  | 'AmazonWorkMailMessageFlowReadOnlyAccess'\n  | 'CloudWatchSyntheticsFullAccess'\n  | 'AWSDataExchangeSubscriberFullAccess'\n  | 'IAMAccessAnalyzerFullAccess'\n  | 'AWSCodeArtifactAdminAccess'\n  | 'AWSServiceCatalogAdminReadOnlyAccess'\n  | 'AWSQuickSightSageMakerPolicy'\n  | 'AWSDataLifecycleManagerServiceRoleForAMIManagement'\n  | 'AwsGlueSessionUserRestrictedPolicy'\n  | 'AmazonMonitronFullAccess'\n  | 'AmazonHealthLakeReadOnlyAccess'\n  | 'AmazonWorkSpacesSelfServiceAccess'\n  | 'AmazonManagedBlockchainServiceRolePolicy'\n  | 'AmazonRoute53RecoveryClusterFullAccess'\n  | 'AmazonSageMakerCoreServiceRolePolicy'\n  | 'AmazonCloudWatchRUMReadOnlyAccess'\n  | 'AWSThinkboxDeadlineSpotEventPluginAdminPolicy'\n  | 'AmazonLookoutMetricsReadOnlyAccess'\n  | 'AWSDataExchangeFullAccess'\n  | 'AWSDataExchangeProviderFullAccess'\n  | 'AWSBugBustFullAccess'\n  | 'AWSVendorInsightsAssessorReadOnly'\n  | 'AWSServiceRolePolicyForBackupReports'\n  | 'CloudWatchApplicationInsightsFullAccess'\n  | 'AWSControlTowerServiceRolePolicy'\n  | 'AmazonSageMakerNotebooksServiceRolePolicy'\n  | 'AmazonRoute53ResolverFullAccess'\n  | 'AWSSystemsManagerChangeManagementServicePolicy'\n  | 'AWSServiceCatalogAppRegistryFullAccess'\n  | 'LakeFormationDataAccessServiceRolePolicy'\n  | 'AWSMediaTailorServiceRolePolicy'\n  | 'AmazonChimeServiceRolePolicy'\n  | 'AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy'\n  | 'AmazonMSKConnectReadOnlyAccess'\n  | 'AWSTrustedAdvisorReportingServiceRolePolicy'\n  | 'AWSOpsWorksRegisterCLI_EC2'\n  | 'AWSWAFConsoleReadOnlyAccess'\n  | 'AWSSavingsPlansFullAccess'\n  | 'AwsGlueSessionUserRestrictedServiceRole'\n  | 'AWSServiceRoleForImageBuilder'\n  | 'AWSElasticDisasterRecoveryRecoveryInstancePolicy'\n  | 'AWSVendorInsightsVendorReadOnly'\n  | 'AmazonOpenSearchServiceRolePolicy'\n  | 'AmazonBraketServiceRolePolicy'\n  | 'AmazonCodeGuruProfilerAgentAccess'\n  | 'AmazonLookoutVisionConsoleFullAccess'\n  | 'AWSAccountManagementFullAccess'\n  | 'AmazonCodeGuruReviewerServiceRolePolicy'\n  | 'ServerMigration_ServiceRole'\n  | 'AWSAppMeshPreviewEnvoyAccess'\n  | 'AWSOutpostsServiceRolePolicy'\n  | 'AmazonEC2RoleforAWSCodeDeployLimited'\n  | 'AWSElementalMediaTailorFullAccess'\n  | 'AWSMigrationHubStrategyConsoleFullAccess'\n  | 'AWSIotRoboRunnerReadOnly'\n  | 'ECRReplicationServiceRolePolicy'\n  | 'MigrationHubServiceRolePolicy'\n  | 'AmazonSageMakerCanvasForecastAccess'\n  | 'AWSServiceRoleForMonitronPolicy'\n  | 'AWSPanoramaSageMakerRolePolicy'\n  | 'AWSPanoramaApplianceServiceRolePolicy'\n  | 'AWSIoTWirelessGatewayCertManager'\n  | 'AWSDirectConnectServiceRolePolicy'\n  | 'AWSApplicationMigrationEC2Access'\n  | 'AmazonCloudWatchEvidentlyFullAccess'\n  | 'AWSSupportAppFullAccess'\n  | 'AWSImageBuilderReadOnlyAccess'\n  | 'AWSCloudTrail_ReadOnlyAccess'\n  | 'AWSGrafanaConsoleReadOnlyAccess'\n  | 'AWSMarketplaceMeteringRegisterUsage'\n  | 'AmazonManagedBlockchainReadOnlyAccess'\n  | 'AmazonLookoutVisionReadOnlyAccess'\n  | 'AmazonRekognitionCustomLabelsFullAccess'\n  | 'AmazonHealthLakeFullAccess'\n  | 'AWSBackupServiceLinkedRolePolicyForBackup'\n  | 'AmazonManagedBlockchainConsoleFullAccess'\n  | 'AWSApplicationMigrationConversionServerPolicy'\n  | 'AWSSavingsPlansReadOnlyAccess'\n  | 'AWSMigrationHubRefactorSpacesFullAccess'\n  | 'AmazonHoneycodeWorkbookFullAccess'\n  | 'AWSIoTDeviceTesterForGreengrassFullAccess'\n  | 'AWSElasticBeanstalkRoleECS'\n  | 'AmazonWorkMailMessageFlowFullAccess'\n  | 'AWSServiceRoleForSMS'\n  | 'AWSThinkboxDeadlineResourceTrackerAccessPolicy'\n  | 'CloudWatch-CrossAccountAccess'\n  | 'AWSLakeFormationDataAdmin'\n  | 'AWSElasticBeanstalkRoleCore'\n  | 'AWSLambda_FullAccess'\n  | 'AmazonEMRContainersServiceRolePolicy'\n  | 'AWSKeyManagementServiceMultiRegionKeysServiceRolePolicy'\n  | 'AWSDenyAll'\n  | 'AWSIQFullAccess'\n  | 'AmazonElasticContainerRegistryPublicPowerUser'\n  | 'AmazonPrometheusConsoleFullAccess'\n  | 'AWSElasticBeanstalkRoleSNS'\n  | 'EC2FastLaunchServiceRolePolicy'\n  | 'AmazonEKSVPCResourceController'\n  | 'EC2InstanceConnect'\n  | 'AWSCompromisedKeyQuarantineV2'\n  | 'AmazonS3ObjectLambdaExecutionRolePolicy'\n  | 'ClientVPNServiceConnectionsRolePolicy'\n  | 'GroundTruthSyntheticConsoleFullAccess'\n  | 'AmazonAppFlowFullAccess'\n  | 'AWSElasticDisasterRecoveryReplicationServerPolicy'\n  | 'Ec2ImageBuilderCrossAccountDistributionAccess'\n  | 'AWSThinkboxAWSPortalWorkerPolicy'\n  | 'AmazonS3OutpostsReadOnlyAccess'\n  | 'AWSCompromisedKeyQuarantine'\n  | 'AWSAppMeshEnvoyAccess'\n  | 'AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy'\n  | 'AWSAppRunnerReadOnlyAccess'\n  | 'AmazonRoute53RecoveryClusterReadOnlyAccess'\n  | 'AmazonKendraReadOnlyAccess'\n  | 'AmazonPrometheusFullAccess'\n  | 'AWS_ConfigRole'\n  | 'AmazonOpenSearchServiceReadOnlyAccess'\n  | 'AWSM2ServicePolicy'\n  | 'AmazonConnectCampaignsServiceLinkedRolePolicy'\n  | 'AmazonNimbleStudio-StudioAdmin'\n  | 'AWSCodeArtifactReadOnlyAccess'\n  | 'AmazonRedshiftDataFullAccess'\n  | 'AWSApplicationMigrationReplicationServerPolicy'\n"]}